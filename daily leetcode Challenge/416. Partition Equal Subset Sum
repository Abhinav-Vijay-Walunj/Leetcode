class Solution {
public:
    bool solve(vector<int> nums,int sum)
    {
        sum=sum/2;
        int n=nums.size();
         bool t[n+1][sum+1];
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=sum;j++)
            {
                if(j == 0)
                {
                    t[i][j]=true;
                }
                else if(i==0)
                {
                    t[i][j]=false;
                }
                
            }
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=sum;j++)
            {
                if(nums[i-1]<=j)
                {
                    t[i][j]=t[i-1][j-nums[i-1]]||t[i-1][j];
                }
                else
                {
                    t[i][j]=t[i-1][j];
                }
            }
        }
    if(t[n][sum] == true)
    {
        return 1;
        
    }
    return 0;
    }
    
    bool canPartition(vector<int>& nums) {
        int sum=0;
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            sum+=nums[i];
        }
        if(sum%2 != 0)
            return false;
        else
        {
            return solve(nums,sum);
        }
    }
};
